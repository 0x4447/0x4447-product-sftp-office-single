{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "This stack deploys a SFTP server with a single Office user and one single Public user.",
	"Parameters": {
		"Email": {
			"Description": "Provide an email to which to send errors from alarms. Later you can add more emails to the created SNS Topic.",
			"Type": "String"
		},
		"Password": {
			"Description": "Provide the shared password for the SFTP server.",
			"NoEcho": true,
			"Type": "String"
		},
		"EIP": {
			"Description": "Type the elastic IP ID that you'd like to associate to the EC2 instance.",
			"Type": "String"
		},
		"Subnet": {
			"Description": "Select the subnet to which to deploy the VPN. Remember, some subnets don't support all the instance types.",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"VPCCidr": {
			"Description": "Write the CIDR (example: 0.0.0.0/0) of the selected VPC to limit the EFS access only from inside the VPC itself (https://console.aws.amazon.com/vpc/home).",
			"Type": "String"
		},
		"VPC": {
			"Description": "Select the VPC to which to deploy the SFTP.",
			"Type": "AWS::EC2::VPC::Id"
		}
	},
	"Mappings": {
		"OSIDs": {
			"us-east-2": {
				"64": "ami-0ee8324901ba9164d"
			},
			"us-east-1": {
				"64": "ami-02013ed1a71752ea7"
			},
			"us-west-2": {
				"64": "ami-08e689a423405d7f6"
			},
			"us-west-1": {
				"64": "ami-0f9d113ee458b4f6e"
			},
			"eu-west-3": {
				"64": "ami-080530ec9712e5948"
			},
			"eu-west-2": {
				"64": "ami-0dbd5595b1b1bdab4"
			},
			"eu-west-1": {
				"64": "ami-06a376457af6d8e1c"
			},
			"eu-central-1": {
				"64": "ami-08782e1cd8f682ceb"
			},
			"eu-north-1": {
				"64": "ami-6462eb1a"
			},
			"ap-northeast-2": {
				"64": "ami-0e1a0346bf9f3b831"
			},
			"ap-northeast-1": {
				"64": "ami-0930347fabaa9cd9c"
			},
			"ap-southeast-2": {
				"64": "ami-065d66d47fcd4dfc2"
			},
			"ap-southeast-1": {
				"64": "ami-0ba62a20f78ef85c8"
			},
			"ca-central-1": {
				"64": "ami-0e8e4723a6ac8bb0f"
			},
			"ap-south-1": {
				"64": "ami-0295b1ab1c6e6f31c"
			},
			"sa-east-1": {
				"64": "ami-0a7a2e3acb791c6dc"
			},
			"us-gov-east-1": {
				"64": "ami-7e15f30f"
			},
			"us-gov-west-1": {
				"64": "ami-8b1e74ea"
			}
		}
	},
	"Resources": {
		"Subscription": {
			"Type": "AWS::SNS::Subscription",
			"Properties": {
				"Endpoint": {
					"Ref": "Email"
				},
				"Protocol": "email",
				"TopicArn": {
					"Ref": "SNSTopic"
				}
			}
		},
		"SNSTopic": {
			"Type": "AWS::SNS::Topic",
			"Properties": {
				"DisplayName": {
					"Fn::Sub": "${AWS::StackName}-Alert"
				}
			}
		},
		"BackupPlan": {
			"Type": "AWS::Backup::BackupPlan",
			"Properties": {
				"BackupPlan": {
					"BackupPlanName": "0x4447_SFTP",
					"BackupPlanRule": [
						{
							"RuleName": "7 Days",
							"TargetBackupVault": {
								"Ref": "BackupVault"
							},
							"Lifecycle": {
								"DeleteAfterDays": 7
							},
							"ScheduleExpression": "cron(0 0 * * ? *)"
						}
					]
				}
			}
		},
		"BackupRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "0x4447_SFTP_backup",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "backup.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"Policies": [
					{
						"PolicyName": "backup",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": "*",
									"Resource": "*"
								}
							]
						}
					}
				]
			}
		},
		"BackupSelection": {
			"Type": "AWS::Backup::BackupSelection",
			"Properties": {
				"BackupPlanId": {
					"Ref": "BackupPlan"
				},
				"BackupSelection": {
					"IamRoleArn": {
						"Fn::GetAtt": [
							"BackupRole",
							"Arn"
						]
					},
					"Resources": [
						{
							"Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/${EFS}"
						}
					],
					"SelectionName": "0x4447_SFTP"
				}
			}
		},
		"BackupVault": {
			"Type": "AWS::Backup::BackupVault",
			"Properties": {
				"BackupVaultName": "0x4447_SFTP"
			}
		},
		"EFS": {
			"Type": "AWS::EFS::FileSystem",
			"Properties": {
				"Encrypted": true,
				"PerformanceMode": "generalPurpose",
				"FileSystemTags": [
					{
						"Key": "Name",
						"Value": "SFTP"
					},
					{
						"Key": "Source",
						"Value": "0x4447 LLC"
					},
					{
						"Key": "Info",
						"Value": "https://0x4447.com"
					}
				]
			}
		},
		"EFSMountTarget": {
			"Type": "AWS::EFS::MountTarget",
			"Properties": {
				"FileSystemId": {
					"Ref": "EFS"
				},
				"SubnetId": {
					"Ref": "Subnet"
				},
				"SecurityGroups": [
					{
						"Ref": "SFTPSecurityGroup"
					}
				]
			}
		},
		"ECSInstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [
					{
						"Ref": "EC2Role"
					}
				],
				"InstanceProfileName": {
					"Fn::Sub": "${AWS::StackName}-IP"
				}
			}
		},
		"EC2AutoScalingGroup": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"DesiredCapacity": 1,
				"LaunchConfigurationName": {
					"Ref": "EC2LaunchConfiguration"
				},
				"MaxSize": 1,
				"MinSize": 1,
				"VPCZoneIdentifier": [
					{
						"Ref": "Subnet"
					}
				]
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Count": "1",
					"Timeout": "PT15M"
				}
			},
			"UpdatePolicy": {
				"AutoScalingRollingUpdate": {
					"MaxBatchSize": 1,
					"MinInstancesInService": 0,
					"PauseTime": "PT15M",
					"SuspendProcesses": [
						"HealthCheck",
						"ReplaceUnhealthy",
						"AZRebalance",
						"AlarmNotification",
						"ScheduledActions"
					],
					"WaitOnResourceSignals": true
				}
			}
		},
		"EC2LaunchConfiguration": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Properties": {
				"IamInstanceProfile": {
					"Ref": "ECSInstanceProfile"
				},
				"ImageId": {
					"Fn::FindInMap": [
						"OSIDs",
						{
							"Ref": "AWS::Region"
						},
						"64"
					]
				},
				"AssociatePublicIpAddress": true,
				"InstanceType": "t3.nano",
				"SecurityGroups": [
					{
						"Ref": "SFTPSecurityGroup"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash",
								{
									"Fn::Sub": "EIP_ID=${EIP}"
								},
								{
									"Fn::Sub": "AWS_REGION=${AWS::Region}"
								},
								{
									"Fn::Sub": "EFS_ID=${EFS}"
								},
								{
									"Fn::Sub": "PASSWORD=${Password}"
								},
								"INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id 2>/dev/null)",
								"sudo yum -y update",
								"sudo yum -y install awslogs",
								"sudo yum install -y aws-cfn-bootstrap",
								"sudo yum install -y unzip",
								"curl -O https://bootstrap.pypa.io/get-pip.py",
								"sudo python get-pip.py",
								"sudo pip install awscli --upgrade",
								"sudo systemctl start awslogsd.service",
								"curl -O https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip",
								"unzip AmazonCloudWatchAgent.zip",
								"sudo ./install.sh",
								"echo ewoJIm1ldHJpY3MiOiB7CgkJIm1ldHJpY3NfY29sbGVjdGVkIjogewoJCQkiY3B1IjogewoJCQkJInJlc291cmNlcyI6IFsiKiJdLAoJCQkJIm1lYXN1cmVtZW50IjogWyJ1c2FnZV9zeXN0ZW0iLCAidXNhZ2VfdXNlciJdLAoJCQkJInRvdGFsY3B1IjogZmFsc2UKCQkJfSwKCQkJImRpc2siOiB7CgkJCQkicmVzb3VyY2VzIjogWyIqIl0sCgkJCQkibWVhc3VyZW1lbnQiOiBbImZyZWUiLCAidG90YWwiLCAidXNlZCJdCgkJCX0sCgkJCSJwcm9jZXNzZXMiOiB7CgkJCQkibWVhc3VyZW1lbnQiOiBbInJ1bm5pbmciLCAic2xlZXBpbmciLCAiZGVhZCJdCgkJCX0sCgkJCSJtZW0iOiB7CgkJCQkibWVhc3VyZW1lbnQiOiBbImF2YWlsYWJsZSIsICJ0b3RhbCIsICJ1c2VkIl0KCQkJfQoJCX0sCgkJImFwcGVuZF9kaW1lbnNpb25zIjogewoJCQkiSW1hZ2VJZCI6ICIke2F3czpJbWFnZUlkfSIsCgkJCSJJbnN0YW5jZUlkIjogIiR7YXdzOkluc3RhbmNlSWR9IiwKCQkJIkluc3RhbmNlVHlwZSI6ICIke2F3czpJbnN0YW5jZVR5cGV9IiwKCQkJIkF1dG9TY2FsaW5nR3JvdXBOYW1lIjogIiR7YXdzOkF1dG9TY2FsaW5nR3JvdXBOYW1lfSIKCQl9LAoJCSJhZ2dyZWdhdGlvbl9kaW1lbnNpb25zIiA6IFtbIkF1dG9TY2FsaW5nR3JvdXBOYW1lIl0sIFsiSW5zdGFuY2VJZCIsICJJbnN0YW5jZVR5cGUiXV0KCX0KfQ== | base64 --decode | sudo tee /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json",
								"sudo amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s",
								"aws ec2 associate-address --allocation-id $EIP_ID --instance-id $INSTANCE_ID --allow-reassociation --region=$AWS_REGION",
								"mkdir /mnt/drive",
								"sudo mount -t nfs -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport $EFS_ID.efs.$AWS_REGION.amazonaws.com:/ /mnt/drive",
								"mkdir -p /mnt/drive/office",
								"chmod 700 /mnt/drive/office",
								"sudo groupadd sftp",
								"sudo useradd -m office -g sftp -s /usr/sbin/nologin -d /mnt/drive/office",
								"echo $PASSWORD | passwd --stdin office",
								"chown -R office:sftp /mnt/drive/office",
								"rm /etc/ssh/sshd_config",
								"touch /etc/ssh/sshd_config",
								"echo \"HostKey /etc/ssh/ssh_host_rsa_key\" >> /etc/ssh/sshd_config",
								"echo \"HostKey /etc/ssh/ssh_host_ecdsa_key\" >> /etc/ssh/sshd_config",
								"echo \"HostKey /etc/ssh/ssh_host_ed25519_key\" >> /etc/ssh/sshd_config",
								"echo \"SyslogFacility AUTHPRIV\" >> /etc/ssh/sshd_config",
								"echo \"AuthorizedKeysFile .ssh/authorized_keys\" >> /etc/ssh/sshd_config",
								"echo \"PasswordAuthentication yes\" >> /etc/ssh/sshd_config",
								"echo \"ChallengeResponseAuthentication no\" >> /etc/ssh/sshd_config",
								"echo \"GSSAPIAuthentication yes\" >> /etc/ssh/sshd_config",
								"echo \"GSSAPICleanupCredentials no\" >> /etc/ssh/sshd_config",
								"echo \"UsePAM yes\" >> /etc/ssh/sshd_config",
								"echo \"X11Forwarding no\" >> /etc/ssh/sshd_config",
								"echo \"Subsystem sftp internal-sftp\" >> /etc/ssh/sshd_config",
								"echo \"Match group sftp\" >> /etc/ssh/sshd_config",
								"echo \"ChrootDirectory /mnt/drive\" >> /etc/ssh/sshd_config",
								"echo \"ForceCommand internal-sftp\" >> /etc/ssh/sshd_config",
								"echo \"AuthorizedKeysCommand /usr/bin/timeout 5s /opt/aws/bin/curl_authorized_keys %u %f\" >> /etc/ssh/sshd_config",
								"echo \"AuthorizedKeysCommandUser ec2-instance-connect\" >> /etc/ssh/sshd_config",
								"systemctl restart sshd.service",
								{
									"Fn::Sub": "sudo /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource EC2LaunchConfiguration"
								},
								{
									"Fn::Sub": "sudo /opt/aws/bin/cfn-signal -s true --region ${AWS::Region} --stack ${AWS::StackName} --resource EC2AutoScalingGroup"
								}
							]
						]
					}
				}
			},
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
						"packages": {
							"yum": {
								"awslogs": []
							}
						},
						"files": {
							"/etc/cfn/cfn-hup.conf": {
								"mode": "000644",
								"owner": "root",
								"group": "root",
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[main]",
											{
												"Fn::Sub": "stack=${AWS::StackId}"
											},
											{
												"Fn::Sub": "region=${AWS::Region}"
											}
										]
									]
								}
							},
							"/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[cfn-auto-reloader-hook]",
											"triggers=post.update",
											"path=Resources.ECSLaunchConfiguration.Metadata.AWS::CloudFormation::Init",
											{
												"Fn::Sub": "action=/opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration"
											}
										]
									]
								}
							},
							"/etc/awslogs/awscli.conf": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[plugins]",
											"cwlogs = cwlogs",
											"",
											"[default]",
											{
												"Fn::Sub": "region = ${AWS::Region}"
											}
										]
									]
								}
							},
							"/etc/awslogs/awslogs.conf": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"[general]",
											"state_file = /var/lib/awslogs/agent-state",
											"",
											"[/var/log/messages]",
											"file = /var/log/messages",
											{
												"Fn::Sub": "log_group_name = /var/log/messages"
											},
											{
												"Fn::Sub": "log_stream_name = SFTP"
											},
											"datetime_format = %b %d %H:%M:%S",
											"",
											"[/var/log/secure]",
											"file = /var/log/secure",
											{
												"Fn::Sub": "log_group_name = /var/log/secure"
											},
											{
												"Fn::Sub": "log_stream_name = SFTP"
											},
											"datetime_format = %b %d %H:%M:%S"
										]
									]
								}
							}
						},
						"services": {
							"sysvinit": {
								"cfn-hup": {
									"enabled": true,
									"ensureRunning": true,
									"files": [
										"/etc/cfn/cfn-hup.conf",
										"/etc/cfn/hooks.d/cfn-auto-reloader.conf"
									]
								},
								"awslogsd": {
									"enabled": true,
									"ensureRunning": true,
									"files": [
										"/etc/awslogs/awslogs.conf",
										"/etc/awslogs/awscli.conf"
									]
								}
							}
						}
					}
				}
			}
		},
		"SFTPSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupName": "0x4447_SFTP",
				"GroupDescription": "This group allow our ECS VPN to accept incoming connections.",
				"VpcId": {
					"Ref": "VPC"
				},
				"SecurityGroupEgress": [
					{
						"IpProtocol": "-1",
						"FromPort": -1,
						"ToPort": -1,
						"CidrIp": "0.0.0.0/0"
					}
				],
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22,
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": 2049,
						"ToPort": 2049,
						"CidrIp": {
							"Ref": "VPCCidr"
						}
					}
				]
			}
		},
		"EC2Role": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": {
					"Fn::Sub": "${AWS::StackName}-EC2"
				},
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "ec2.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
					"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
					"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
				]
			}
		},
		"EC2ElasticIPPolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "Elastic_IP",
				"Roles": [
					{
						"Ref": "EC2Role"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": "ec2:AssociateAddress",
							"Resource": "*"
						}
					]
				}
			}
		},
		"CloudWatchDashboard": {
			"Type": "AWS::CloudWatch::Dashboard",
			"Properties": {
				"DashboardName": {
					"Ref": "AWS::StackName"
				},
				"DashboardBody": {
					"Fn::Sub": [
						"{\r\n    \"widgets\": [\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 9,\r\n            \"y\": 0,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"NetworkIn\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"stat\": \"Sum\", \"color\": \"#1f77b4\", \"label\": \"RX\" } ],\r\n                    [ \".\", \"NetworkOut\", \".\", \".\", { \"yAxis\": \"left\", \"stat\": \"Sum\", \"color\": \"#ff7f0e\", \"label\": \"TX\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": true,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"Network In & Out\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 9,\r\n            \"y\": 3,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/ECS\", \"CPUUtilization\", \"ClusterName\", \"${ClusterName}\", { \"yAxis\": \"left\", \"label\": \"ECS\" } ],\r\n                    [ \"AWS/EC2\", \".\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"label\": \"EC2\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": true,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"EC2 CPU Time\",\r\n                \"period\": 300,\r\n                \"legend\": {\r\n                    \"position\": \"bottom\"\r\n                },\r\n                \"yAxis\": {\r\n                    \"left\": {\r\n                        \"label\": \"\",\r\n                        \"showUnits\": true\r\n                    },\r\n                    \"right\": {\r\n                        \"label\": \"\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 0,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"NetworkOut\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"yAxis\": \"right\", \"id\": \"m2\", \"stat\": \"Sum\", \"period\": 2592000, \"color\": \"#ff7f0e\", \"label\": \"TX\" } ],\r\n                    [ \".\", \"NetworkIn\", \".\", \".\", { \"id\": \"m1\", \"stat\": \"Sum\", \"period\": 2592000, \"color\": \"#1f77b4\", \"label\": \"RX\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"Total traffic\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 15,\r\n            \"y\": 9,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"mem_used\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#ff7f0e\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"mem_available\", \".\", \".\", { \"color\": \"#2ca02c\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"RAM\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 9,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"mem_total\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#d62728\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Total\" } ],\r\n                    [ \".\", \"mem_used\", \".\", \".\", { \"color\": \"#ff7f0e\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"mem_available\", \".\", \".\", { \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"RAM\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 15,\r\n            \"y\": 15,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"processes_running\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#2ca02c\", \"label\": \"Running\" } ],\r\n                    [ \".\", \"processes_sleeping\", \".\", \".\", { \"label\": \"Sleeping\" } ],\r\n                    [ \".\", \"processes_dead\", \".\", \".\", { \"color\": \"#8c564b\", \"label\": \"Dead\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"Processes\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 15,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"processes_running\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#d62728\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Running\" } ],\r\n                    [ \".\", \"processes_dead\", \".\", \".\", { \"color\": \"#ff7f0e\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Dead\" } ],\r\n                    [ \".\", \"processes_sleeping\", \".\", \".\", { \"period\": 2592000, \"stat\": \"Maximum\", \"color\": \"#2ca02c\", \"label\": \"Sleeping\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"Processes\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 15,\r\n            \"y\": 12,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"disk_used\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#ff7f0e\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"disk_free\", \".\", \".\", { \"color\": \"#2ca02c\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"HDD\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 12,\r\n            \"width\": 15,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"CWAgent\", \"disk_total\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#d62728\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Total\" } ],\r\n                    [ \".\", \"disk_used\", \".\", \".\", { \"color\": \"#ff7f0e\", \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Used\" } ],\r\n                    [ \".\", \"disk_free\", \".\", \".\", { \"period\": 2592000, \"stat\": \"Maximum\", \"label\": \"Available\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"HDD\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 18,\r\n            \"width\": 24,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/Logs\", \"IncomingLogEvents\", \"LogGroupName\", \"/var/log/dmesg\" ],\r\n                    [ \"...\", \"/var/log/docker\" ],\r\n                    [ \"...\", \"/var/log/ecs/audit.log\" ],\r\n                    [ \"...\", \"/var/log/ecs/ecs-agent.log\" ],\r\n                    [ \"...\", \"/var/log/messages\" ]\r\n                ],\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"Logs Intake\",\r\n                \"period\": 300\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 6,\r\n            \"width\": 24,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"view\": \"timeSeries\",\r\n                \"stacked\": false,\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"CPUSurplusCreditsCharged\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\" ],\r\n                    [ \".\", \"CPUSurplusCreditBalance\", \".\", \".\" ],\r\n                    [ \".\", \"CPUCreditUsage\", \".\", \".\" ]\r\n                ],\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"EC2 CPU Burst\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"metric\",\r\n            \"x\": 0,\r\n            \"y\": 3,\r\n            \"width\": 9,\r\n            \"height\": 3,\r\n            \"properties\": {\r\n                \"metrics\": [\r\n                    [ \"AWS/EC2\", \"CPUUtilization\", \"AutoScalingGroupName\", \"${AutoScalingGroupName}\", { \"color\": \"#ff7f0e\", \"label\": \"EC2\" } ],\r\n                    [ \"AWS/ECS\", \".\", \"ClusterName\", \"${ClusterName}\", { \"yAxis\": \"left\", \"color\": \"#1f77b4\", \"label\": \"ECS\" } ]\r\n                ],\r\n                \"view\": \"singleValue\",\r\n                \"stacked\": false,\r\n                \"region\": \"us-east-1\",\r\n                \"title\": \"EC2 CPU Time\",\r\n                \"period\": 300,\r\n                \"legend\": {\r\n                    \"position\": \"bottom\"\r\n                },\r\n                \"yAxis\": {\r\n                    \"left\": {\r\n                        \"label\": \"\",\r\n                        \"showUnits\": true\r\n                    },\r\n                    \"right\": {\r\n                        \"label\": \"\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
						{
							"AutoScalingGroupName": {
								"Ref": "EC2AutoScalingGroup"
							},
							"ClusterName": {
								"Ref": "AWS::StackName"
							}
						}
					]
				}
			}
		},
		"CPUAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "${AWS::StackName}-CPU"
				},
				"AlarmDescription": "Track CPU utilization.",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 1,
				"Unit": "Count",
				"Period": 300,
				"Threshold": 75,
				"Namespace": "AWS/EC2",
				"MetricName": "CPUUtilization",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "AutoScalingGroupName",
						"Value": {
							"Ref": "EC2AutoScalingGroup"
						}
					}
				]
			}
		},
		"CPUBurstAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "${AWS::StackName}-CPU-Burst"
				},
				"AlarmDescription": "Track CPU Burst utilization.",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 1,
				"Unit": "Count",
				"Period": 300,
				"Threshold": 100,
				"Namespace": "AWS/EC2",
				"MetricName": "CPUSurplusCreditBalance",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "AutoScalingGroupName",
						"Value": {
							"Ref": "EC2AutoScalingGroup"
						}
					}
				]
			}
		},
		"RAMAlarm": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmName": {
					"Fn::Sub": "${AWS::StackName}-RAM"
				},
				"AlarmDescription": "Track RAM utilization across all the EC2",
				"TreatMissingData": "notBreaching",
				"ActionsEnabled": true,
				"AlarmActions": [
					{
						"Ref": "SNSTopic"
					}
				],
				"ComparisonOperator": "GreaterThanOrEqualToThreshold",
				"EvaluationPeriods": 1,
				"Unit": "Count",
				"Period": 300,
				"Threshold": 400000000,
				"Namespace": "CWAgent",
				"MetricName": "mem_used",
				"Statistic": "Average",
				"Dimensions": [
					{
						"Name": "AutoScalingGroupName",
						"Value": {
							"Ref": "EC2AutoScalingGroup"
						}
					}
				]
			}
		}
	}
}